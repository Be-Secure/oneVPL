name: Build
run-name: Build (Triggered by ${{ github.event_name }} by @${{ github.actor }})
on:
  workflow_dispatch:
    inputs:
      BUILD_CONFIG:
        description: Build configuration
        required: false
        default: Release
        type: choice
        options: 
          - Release
          - Debug
      PACKAGE_NAME:
        description: Package artifact name
        required: false
        default: windows-build
        type: string
  workflow_call:
    inputs:
      BUILD_CONFIG:
        description: Build configuration
        required: false
        default: Release
        type: string
      PACKAGE_NAME:
        description: Package artifact name
        required: false
        default: windows-build
        type: string

jobs:
  build:
    name: ${{ inputs.BUILD_CONFIG }} Config
    runs-on: [self-hosted, Windows, CMake, vs2022]
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3
        with:
          path: source
      - name: Build
        run: |
          pushd source
          cmake -B _build -DENABLE_WARNING_AS_ERROR=ON -DBUILD_TESTS=ON -DBUILD_PYTHON_BINDING=OFF
          if($LASTEXITCODE -ne 0)
          {
              Exit $LASTEXITCODE
          }
          cmake --build _build --verbose --config ${{ inputs.BUILD_CONFIG }}
          if($LASTEXITCODE -ne 0)
          {
              Exit $LASTEXITCODE
          }
          popd
      - name: Test
        run: |
          pushd source
          ctest --test-dir _build -C ${{ inputs.BUILD_CONFIG }} --output-on-failure -T test
          if($LASTEXITCODE -ne 0)
          {
              Exit $LASTEXITCODE
          }
          popd
      - name: Package
        run: |
          pushd source
          # cmake cpack conflicts with choco cpack, at least until next choco release
          cmake --build _build --config ${{ inputs.BUILD_CONFIG }} --target package
          if($LASTEXITCODE -ne 0)
          {
              Exit $LASTEXITCODE
          }
          # cmake --install _build --prefix _install --config ${{ inputs.BUILD_CONFIG }}
          # if($LASTEXITCODE -ne 0)
          # {
          #     Exit $LASTEXITCODE
          # }
          popd
      - name: Record Artifacts
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: ${{ inputs.PACKAGE_NAME }}
          path: source/_build/*-all.zip
      - name: Cleanup
        if: always()
        run: |
          Remove-Item -Recurse -Force source
